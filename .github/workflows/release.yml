name: Build and Release

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📁 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci

      - name: Format code
        run: npm run format:fix

      - name: 🔄 Lint and fix code
        run: npm run lint:fix

      - name: 🚀 Build the project
        run: npm run build

  release:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write 

    steps:
      - name: 📁 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm install --legacy-peer-deps

      - name: 📦 Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx semantic-release

      - name: 📦 Publish to npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🚀 Create GitHub Release
        run: |
          RELEASE_TAG=$(npx semantic-release --dry-run | grep "The next release version is" | awk '{print $7}')
          echo "Release tag: $RELEASE_TAG"
          gh release create $RELEASE_TAG dist/* --title "Release $RELEASE_TAG" --notes "Release notes for $RELEASE_TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

